microservice-chart: &microservice-chart
  namespace: "apiconfig"
  nameOverride: ""
  fullnameOverride: ""
  image:
    repository: ghcr.io/pagopa/pagopa-api-config-testing-support
    tag: "0.0.2-5-PIDM-487"
    pullPolicy: Always
  livenessProbe:
    httpGet:
      path: /actuator/health/liveness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  readinessProbe:
    httpGet:
      path: /actuator/health/readiness
      port: 8080
    initialDelaySeconds: 90
    failureThreshold: 6
    periodSeconds: 10
  deployment:
    create: true
    replicas: 1
  service:
    create: true
    type: ClusterIP
    ports:
      - 8080
  ingress: &ingress
    create: true
    host: "weudev.apiconfig.internal.dev.platform.pagopa.it"
    #    path: /api-config-testing-support/(.*)
    servicePort: 8080
  serviceAccount:
    name: "apiconfig-workload-identity"
  azure:
    workloadIdentityClientId: <workload-identity-client-id-set-automatically-by-gha>
  podAnnotations: {}
  podSecurityContext:
    seccompProfile:
      type: RuntimeDefault
  securityContext:
    allowPrivilegeEscalation: false
  resources:
    requests:
      memory: "400Mi"
      cpu: "0.2"
    limits:
      memory: "640Mi"
      cpu: "0.25"
  autoscaling:
    enable: true
    minReplica: 1
    maxReplica: 3
    pollingInterval: 10 # seconds
    cooldownPeriod: 50 # seconds
    triggers:
      - type: cpu
        metadata:
          # Required
          type: Utilization # Allowed types are 'Utilization' or 'AverageValue'
          value: "75"
      - type: memory
        metadata:
          # Required
          type: Utilization # Allowed types are 'Utilization' or 'AverageValue'
          value: "75"
  envConfig: &envConfig
    #    WEBSITE_SITE_NAME: 'pagopa-api-config-testing-support'
    ENV: 'dev'
    TZ: "Europe/Rome"
    APP_LOGGING_LEVEL: 'DEBUG'
    DEFAULT_LOGGING_LEVEL: 'INFO'
    CORS_CONFIGURATION: '{"origins": ["*"], "methods": ["*"]}'
    #    OTEL_SERVICE_NAME: "pagopa-api-config-testing-support"
    OTEL_RESOURCE_ATTRIBUTES: "deployment.environment=dev"
    OTEL_EXPORTER_OTLP_ENDPOINT: "http://otel-collector.elastic-system.svc:4317"
    OTEL_TRACES_EXPORTER: otlp
    OTEL_METRICS_EXPORTER: otlp
    OTEL_LOGS_EXPORTER: none
    OTEL_TRACES_SAMPLER: "always_on"
    #    DB_CONFIG_URL: "jdbc:oracle:thin:@(DESCRIPTION=(ENABLE=BROKEN)(ADDRESS=(PROTOCOL=tcp)(PORT=1522)(HOST=db-nodo-pagamenti.d.db-nodo-pagamenti.com))(CONNECT_DATA=(SERVICE_NAME=NDPSPCT_PP_NODO4_CFG))(SO_KEEPALIVE=true)(TCP_KEEPIDLE=60)(TCP_KEEPINTVL=30)(TCP_KEEPCNT=15))"
    #    DB_CONFIG_USER: "NODO4_CFG"
    #    DB_CONFIG_DRIVER: "oracle.jdbc.OracleDriver"
    #    HEALTHCHECK_QUERY: "select 1 from DUAL"
  envSecret: &envSecret
    # required
    APPLICATIONINSIGHTS_CONNECTION_STRING: 'ai-d-connection-string'
    OTEL_AUTH_BEARER: "otel-auth-bearer"
    #      DB_CONFIG_PASSWORD: 'oracle-db-cfg-password'
  keyvault:
    name: "pagopa-d-apiconfig-kv"
    tenantId: "7788edaf-0346-4068-9d79-c868aed15b3d"
  tmpVolumeMount:
    create: true
  affinity:
    nodeAffinity:
      requiredDuringSchedulingIgnoredDuringExecution:
        nodeSelectorTerms:
          - matchExpressions:
              - key: node_type
                operator: In
                values:
                  - user
  canaryDelivery:
    create: false
# Configuration used to update image tag
postgresql:
  !!merge <<: *microservice-chart
  ingress:
    !!merge <<: *ingress
    path: /api-config-testing-support/p/(.*)
  envConfig:
    !!merge <<: *envConfig
    WEBSITE_SITE_NAME: 'pagopa-api-config-postgres-testing-support'
    OTEL_SERVICE_NAME: "pagopa-api-config-postgres-testing-support"
    DB_CONFIG_URL: "jdbc:postgresql://ndp.d.db-nodo-pagamenti.com:6432/nodo?sslmode=require&prepareThreshold=0&currentSchema=cfg"
    DB_CONFIG_USER: "cfg"
    DB_CONFIG_DRIVER: "org.postgresql.Driver"
    HEALTHCHECK_QUERY: "select 1"
  envSecret:
    !!merge <<: *envSecret
    DB_CONFIG_PASSWORD: "postgresql-db-cfg-password"
postgresql-nexi:
  !!merge <<: *microservice-chart
  ingress:
    !!merge <<: *ingress
    path: /api-config-testing-support/pnexi/(.*)
  envConfig:
    !!merge <<: *envConfig
    WEBSITE_SITE_NAME: 'pagopa-api-config-postgres-nexi-testing-support'
    OTEL_SERVICE_NAME: "pagopa-api-config-postgres-nexi-testing-support"
    DB_CONFIG_URL: "jdbc:postgresql://db-postgres-ndp.d.db-nodo-pagamenti.com:5444/ndpspct?prepareThreshold=0&currentSchema=NODO4_CFG"
    DB_CONFIG_USER: "pp_nodo4_cfg"
    DB_CONFIG_DRIVER: "org.postgresql.Driver"
    HEALTHCHECK_QUERY: "select 1"
  envSecret:
    !!merge <<: *envSecret
    DB_CONFIG_PASSWORD: "db-cfg-password"
