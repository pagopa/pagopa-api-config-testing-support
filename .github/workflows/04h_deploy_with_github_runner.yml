name: Deploy on AKS

on:
  workflow_call:
    inputs:
      environment:
        required: true
        description: The name of the environment where to deploy
        type: string
      branch:
        required: false
        default: ${{ github.ref_name }}
        type: string
      target:
        required: true
        description: The environment target of the job
        type: string
      use_oracle:
        required: true
        description: Deploy Oracle version
        type: boolean
      use_postgres:
        required: true
        description: Deploy PoststgreSQL version
        type: boolean
      use_postgres_nexi:
        required: true
        description: Deploy PoststgreSQL Nexi version
        type: boolean

env:
  APP_NAME: apiconfig-testing-support


permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: [ self-hosted-job, "${{ inputs.environment }}" ]
    if: ${{ inputs.target == inputs.environment || inputs.target == 'all' }}
    name: Deploy on AKS
    environment: ${{ inputs.environment }}
    steps:
      - name: Generate Helm option
        id: helm_generation
        shell: bash
        run: |
          HELM_ARGS="--debug --wait --timeout 15m0s --set microservice-chart.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}} --set postgresql.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}} --set postgresql-nexi.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}} --set oracle.azure.workloadIdentityClientId=${{vars.WORKLOAD_IDENTITY_ID}}"
          if ${USE_POSTGRES}; then
            HELM_ARGS="$HELM_ARGS --set postgresql.forceRedeploy=true --set postgresql.enabled=true"
          fi
          if ${USE_POSTGRES_NEXI}; then
            HELM_ARGS="$HELM_ARGS --set postgresql-nexi.forceRedeploy=true --set postgresql-nexi.enabled=true"
          fi
          if ${USE_ORACLE}; then
            HELM_ARGS="$HELM_ARGS --set oracle.forceRedeploy=true --set oracle.enabled=true"
          fi
          echo "::set-output name=helm_args::$HELM_ARGS"
        env:
          USE_ORACLE: ${{ inputs.use_oracle }}
          USE_POSTGRES: ${{ inputs.use_postgres }}
          USE_POSTGRES_NEXI: ${{ inputs.use_postgres_nexi }}

      - name: Deploy
        uses: pagopa/github-actions-template/aks-deploy@main
        with:
          branch: ${{ inputs.branch }}
          client_id: ${{ secrets.CLIENT_ID }}
          subscription_id: ${{ secrets.SUBSCRIPTION_ID }}
          tenant_id: ${{ secrets.TENANT_ID }}
          env: ${{ inputs.environment }}
          namespace: ${{ vars.NAMESPACE }}
          cluster_name: ${{ vars.CLUSTER_NAME }}
          resource_group: ${{ vars.CLUSTER_RESOURCE_GROUP }}
          app_name: ${{ env.APP_NAME }}
          helm_upgrade_options: ${{ steps.helm_generation.outputs.helm_args }}
